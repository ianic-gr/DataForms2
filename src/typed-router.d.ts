/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/devExamples/': RouteRecordInfo<'/devExamples/', '/devExamples', Record<never, never>, Record<never, never>>,
    '/devExamples/accordion': RouteRecordInfo<'/devExamples/accordion', '/devExamples/accordion', Record<never, never>, Record<never, never>>,
    '/devExamples/checks-radios': RouteRecordInfo<'/devExamples/checks-radios', '/devExamples/checks-radios', Record<never, never>, Record<never, never>>,
    '/devExamples/conditionals': RouteRecordInfo<'/devExamples/conditionals', '/devExamples/conditionals', Record<never, never>, Record<never, never>>,
    '/devExamples/contactForm': RouteRecordInfo<'/devExamples/contactForm', '/devExamples/contactForm', Record<never, never>, Record<never, never>>,
    '/devExamples/datepickers': RouteRecordInfo<'/devExamples/datepickers', '/devExamples/datepickers', Record<never, never>, Record<never, never>>,
    '/devExamples/dynamicComponents': RouteRecordInfo<'/devExamples/dynamicComponents', '/devExamples/dynamicComponents', Record<never, never>, Record<never, never>>,
    '/devExamples/epic': RouteRecordInfo<'/devExamples/epic', '/devExamples/epic', Record<never, never>, Record<never, never>>,
    '/devExamples/fileInput': RouteRecordInfo<'/devExamples/fileInput', '/devExamples/fileInput', Record<never, never>, Record<never, never>>,
    '/devExamples/fileUpload': RouteRecordInfo<'/devExamples/fileUpload', '/devExamples/fileUpload', Record<never, never>, Record<never, never>>,
    '/devExamples/numberInput': RouteRecordInfo<'/devExamples/numberInput', '/devExamples/numberInput', Record<never, never>, Record<never, never>>,
    '/devExamples/password': RouteRecordInfo<'/devExamples/password', '/devExamples/password', Record<never, never>, Record<never, never>>,
    '/devExamples/readonly': RouteRecordInfo<'/devExamples/readonly', '/devExamples/readonly', Record<never, never>, Record<never, never>>,
    '/devExamples/slots': RouteRecordInfo<'/devExamples/slots', '/devExamples/slots', Record<never, never>, Record<never, never>>,
    '/devExamples/tabs': RouteRecordInfo<'/devExamples/tabs', '/devExamples/tabs', Record<never, never>, Record<never, never>>,
    '/devExamples/themes/Breeze': RouteRecordInfo<'/devExamples/themes/Breeze', '/devExamples/themes/Breeze', Record<never, never>, Record<never, never>>,
    '/devExamples/themes/Fluid': RouteRecordInfo<'/devExamples/themes/Fluid', '/devExamples/themes/Fluid', Record<never, never>, Record<never, never>>,
    '/diagrams': RouteRecordInfo<'/diagrams', '/diagrams', Record<never, never>, Record<never, never>>,
    '/examples/': RouteRecordInfo<'/examples/', '/examples', Record<never, never>, Record<never, never>>,
    '/examples/accordion': RouteRecordInfo<'/examples/accordion', '/examples/accordion', Record<never, never>, Record<never, never>>,
    '/examples/checks-radios': RouteRecordInfo<'/examples/checks-radios', '/examples/checks-radios', Record<never, never>, Record<never, never>>,
    '/examples/conditionals': RouteRecordInfo<'/examples/conditionals', '/examples/conditionals', Record<never, never>, Record<never, never>>,
    '/examples/contactForm': RouteRecordInfo<'/examples/contactForm', '/examples/contactForm', Record<never, never>, Record<never, never>>,
    '/examples/datepickers': RouteRecordInfo<'/examples/datepickers', '/examples/datepickers', Record<never, never>, Record<never, never>>,
    '/examples/dynamicComponents': RouteRecordInfo<'/examples/dynamicComponents', '/examples/dynamicComponents', Record<never, never>, Record<never, never>>,
    '/examples/epic': RouteRecordInfo<'/examples/epic', '/examples/epic', Record<never, never>, Record<never, never>>,
    '/examples/fileInput': RouteRecordInfo<'/examples/fileInput', '/examples/fileInput', Record<never, never>, Record<never, never>>,
    '/examples/numberInput': RouteRecordInfo<'/examples/numberInput', '/examples/numberInput', Record<never, never>, Record<never, never>>,
    '/examples/password': RouteRecordInfo<'/examples/password', '/examples/password', Record<never, never>, Record<never, never>>,
    '/examples/slots': RouteRecordInfo<'/examples/slots', '/examples/slots', Record<never, never>, Record<never, never>>,
    '/examples/tabs': RouteRecordInfo<'/examples/tabs', '/examples/tabs', Record<never, never>, Record<never, never>>,
    '/examples/themes/Breeze': RouteRecordInfo<'/examples/themes/Breeze', '/examples/themes/Breeze', Record<never, never>, Record<never, never>>,
    '/examples/themes/Fluid': RouteRecordInfo<'/examples/themes/Fluid', '/examples/themes/Fluid', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/devExamples/index.vue': {
      routes: '/devExamples/'
      views: never
    }
    'src/pages/devExamples/accordion.vue': {
      routes: '/devExamples/accordion'
      views: never
    }
    'src/pages/devExamples/checks-radios.vue': {
      routes: '/devExamples/checks-radios'
      views: never
    }
    'src/pages/devExamples/conditionals.vue': {
      routes: '/devExamples/conditionals'
      views: never
    }
    'src/pages/devExamples/contactForm.vue': {
      routes: '/devExamples/contactForm'
      views: never
    }
    'src/pages/devExamples/datepickers.vue': {
      routes: '/devExamples/datepickers'
      views: never
    }
    'src/pages/devExamples/dynamicComponents.vue': {
      routes: '/devExamples/dynamicComponents'
      views: never
    }
    'src/pages/devExamples/epic.vue': {
      routes: '/devExamples/epic'
      views: never
    }
    'src/pages/devExamples/fileInput.vue': {
      routes: '/devExamples/fileInput'
      views: never
    }
    'src/pages/devExamples/fileUpload.vue': {
      routes: '/devExamples/fileUpload'
      views: never
    }
    'src/pages/devExamples/numberInput.vue': {
      routes: '/devExamples/numberInput'
      views: never
    }
    'src/pages/devExamples/password.vue': {
      routes: '/devExamples/password'
      views: never
    }
    'src/pages/devExamples/readonly.vue': {
      routes: '/devExamples/readonly'
      views: never
    }
    'src/pages/devExamples/slots.vue': {
      routes: '/devExamples/slots'
      views: never
    }
    'src/pages/devExamples/tabs.vue': {
      routes: '/devExamples/tabs'
      views: never
    }
    'src/pages/devExamples/themes/Breeze.vue': {
      routes: '/devExamples/themes/Breeze'
      views: never
    }
    'src/pages/devExamples/themes/Fluid.vue': {
      routes: '/devExamples/themes/Fluid'
      views: never
    }
    'src/pages/diagrams.vue': {
      routes: '/diagrams'
      views: never
    }
    'src/pages/examples/index.vue': {
      routes: '/examples/'
      views: never
    }
    'src/pages/examples/accordion.vue': {
      routes: '/examples/accordion'
      views: never
    }
    'src/pages/examples/checks-radios.vue': {
      routes: '/examples/checks-radios'
      views: never
    }
    'src/pages/examples/conditionals.vue': {
      routes: '/examples/conditionals'
      views: never
    }
    'src/pages/examples/contactForm.vue': {
      routes: '/examples/contactForm'
      views: never
    }
    'src/pages/examples/datepickers.vue': {
      routes: '/examples/datepickers'
      views: never
    }
    'src/pages/examples/dynamicComponents.vue': {
      routes: '/examples/dynamicComponents'
      views: never
    }
    'src/pages/examples/epic.vue': {
      routes: '/examples/epic'
      views: never
    }
    'src/pages/examples/fileInput.vue': {
      routes: '/examples/fileInput'
      views: never
    }
    'src/pages/examples/numberInput.vue': {
      routes: '/examples/numberInput'
      views: never
    }
    'src/pages/examples/password.vue': {
      routes: '/examples/password'
      views: never
    }
    'src/pages/examples/slots.vue': {
      routes: '/examples/slots'
      views: never
    }
    'src/pages/examples/tabs.vue': {
      routes: '/examples/tabs'
      views: never
    }
    'src/pages/examples/themes/Breeze.vue': {
      routes: '/examples/themes/Breeze'
      views: never
    }
    'src/pages/examples/themes/Fluid.vue': {
      routes: '/examples/themes/Fluid'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
